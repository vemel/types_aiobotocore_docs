name: Update docs
concurrency: update

on:
  # schedule:
  #   - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      force:
        required: false
        description: Use to force update

jobs:
  update-docs:
    env:
      PIP_NO_CACHE_DIR: false
      PIP_USER: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Extract versions
        id: vars
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs')
            const { getAioBotocoreVersion } = require('./.github/workflows/helpers.js')
            core.setOutput('version', '')

            const currentAioBotocoreVersion = fs.readFileSync('./aiobotocore_version.txt', 'utf8').trim()
            const force = context.payload.inputs ? context.payload.inputs.force : false

            const aioBotocoreVersion = await getAioBotocoreVersion()
            if (!force && currentAioBotocoreVersion === aioBotocoreVersion) {
              core.info(`No updates, ${aioBotocoreVersion} is still the latest`)
              return
            }

            core.info(`Updating to ${aioBotocoreVersion} over ${currentAioBotocoreVersion}`)
            core.setOutput('version', aioBotocoreVersion)
            core.setOutput('aiobotocore-version', aioBotocoreVersion)
      - name: Set up Python
        if: steps.vars.outputs.version
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Get aiobotocore download links
        id: links
        if: steps.vars.outputs.version
        uses: actions/github-script@v4
        env:
          AIOBOTOCORE_VERSION: ${{ steps.vars.outputs.aiobotocore-version }}
        with:
          script: |
            const { extractAioBotocoreDownloadLinks } = require('./.github/workflows/helpers.js')
            await extractAioBotocoreDownloadLinks({ core })
      - name: Install builder
        if: steps.vars.outputs.version
        run: |
          python -m pip install -U mypy_boto3_builder
      - name: Install aiobotocore
        if: steps.vars.outputs.version
        run: |
          mkdir installtemp
          cd installtemp
          wget ${{ steps.links.outputs.aiobotocore-url }}
          pip install aiobotocore*
          cd ..
          rm -rf installtemp
      - name: Build docs
        if: steps.vars.outputs.version
        run: |
          python -m mypy_boto3_builder . --product aiobotocore-docs
          mkdir -p docs
          cp README.md docs
          cp -r types_aiobotocore_* docs
      - name: Update marker file
        if: steps.vars.outputs.version
        env:
          AIOBOTOCORE_VERSION: ${{ steps.vars.outputs.aiobotocore-version }}
        run: |
          echo $AIOBOTOCORE_VERSION > ./aiobotocore_version.txt
      - name: Commit changes
        if: steps.vars.outputs.version
        env:
          AIOBOTOCORE_VERSION: ${{ steps.vars.outputs.aiobotocore-version }}
        run: |
          git config --global user.email "github-actions"
          git config --global user.name "github-actions@github.com"
          git add -A .
          git commit -m "Update docs to ${AIOBOTOCORE_VERSION}"
          git tag ${AIOBOTOCORE_VERSION}
          git push --tags
          git push
